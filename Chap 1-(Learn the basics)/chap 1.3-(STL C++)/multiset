A multiset in STL is an associative container just like a set the only difference is it can store duplicate elements in it.

Example:
multiset<int> s;
multiset<string> str;

Functions :
1. insert() – to insert an element in the multiset.
   multiset<int> s;
   s.insert(1);
   s.insert(2);
2. begin() – return an iterator pointing to the first element in the multiset.
3. end() – returns an iterator to the theoretical element after the last element.
4. count() – gives the count of a particular element in the multiset.
   multiset<int> s;
  s.insert(1);
  s.insert(2);
  s.count(2); //returns 1
5. clear() – deletes all the elements in the multiset.
6. find() – to search an element in the multiset.
   multiset<int> s;
   s.insert(1);
   s.insert(2);
   if(s.find(2)!=s.end())
   cout<<"true"<<endl;
7. erase() – to delete a single element or elements between a particular range.
8. size() – returns the size of the multiset.
9. empty() – to check if the multiset is empty or not.
10 cbegin() – it refers to the first element of the multiset.
11. cend() – it refers to the theoretical element after the last element of the multiset.
12. rbegin() – it points to the last element of the multiset.
13. rend() – it points to the theoretical element before the first element of the multiset.
14. emplace() – to insert an element in the multiset.
15. max_size() – the maximum elements a multiset can hold.
