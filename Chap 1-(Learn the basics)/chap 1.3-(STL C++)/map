map in STL are associative containers where each element consists of a key value and a mapped value. Two mapped values cannot have the same key value.

Example:
map<int,int> mpp;
map<string,int> mpp;

Functions:
1. insert() – to insert an element in the map.
   map<int,int> mp;
   mp.insert({1,10});
   mp.insert({2,20});
2. begin() – return an iterator pointing to the first element in the map.
3. end() – returns an iterator to the theoretical element after the last element.
4. clear() – deletes all the elements in the map.
5. find() – to search for an element in the map.
   map<int,int> mp;
   mp.insert({1,10});
   mp.insert({2,20});
   if(mp.find(2)!=mp.end())
   cout<<"true"<<endl;
6. erase() – to delete a single element or elements between a particular range.
   mp.erase(key);
   mp.erase(iterator position);
   mp.erase(iterator position 1, iterator position 2);
7. size() – returns the number of elements on the map.
8. empty() – to check if the map is empty or not.
9. cbegin() – it refers to the first element of the map.
10. cend() – it refers to the theoretical element after the last element of the map.
11. rbegin() – it points to the last element of the map.
12. rend() – it points to the theoretical element before the first element of the map.
13. emplace() – to insert an element in the map.
14. max_size() – the maximum elements a map can hold.
